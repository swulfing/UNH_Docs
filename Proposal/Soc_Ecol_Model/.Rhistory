Items = c("Item 1", "Item 2", "Item 3"),
Text_1 = c("Lorem ipsum dolor sit amet",  "consectetur adipiscing elit","Proin vehicula tempor ex. Morbi"),
Text_2 = c("Duis posuere placerat magna","ac aliquam lorem viverra non", "Ut ultrices tempus eros, quis s")
dt <- tibble(
dt <- tibble(
Items = c("Item 1", "Item 2", "Item 3"),
Text_1 = c("Lorem ipsum dolor sit amet",  "consectetur adipiscing elit","Proin vehicula tempor ex. Morbi"),
Text_2 = c("Duis posuere placerat magna","ac aliquam lorem viverra non", "Ut ultrices tempus eros, quis s"))
dt
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
#knitr::write_bib look into
setwd("C:/Users/sophi/Documents/GitHub/UNH_Docs/Proposal/Mtx_Model")
library(tinytex)
library(matlib)
library(ggplot2)
library(quadprog) #cite
library(gridtext)
library(popbio) #cite
library(knitr)
library(gridExtra)
library(RColorBrewer)
#library(rPref) #Double check what this is doing. Maybe cite?
library(tidyr)
library(dplyr)
library(ggpubr)
library(bookdown)
library(kableExtra)
library(grid)
library(Rage)
# #Raw data n supplemental. ASK
# in-stage bar graph goes in paper
# in stage management scenarios will definitely be supplemental
# Check out ecological modelling journal
# Write about stable stage cause I don't think you do
# Citations! Also check ahilya table
# APPENDIX!
# MAKE FIG CAPS FOR EVERYTHING AND EDIT FIGS.
observedData <- as.matrix(data.frame(read.csv("RaberinaryBenbow2012Calcs.csv")))
observedStageMatrix <- observedData[1:13, 2:5]
lifetable <- data.frame(mpm_to_table(
matU,
matF = matR,
matC = NULL,
start = 1L,
xmax = 1000,
lx_crit = 0.01,
radix = 1
))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
#knitr::write_bib look into
setwd("C:/Users/sophi/Documents/GitHub/UNH_Docs/Proposal/Mtx_Model")
library(tinytex)
library(matlib)
library(ggplot2)
library(quadprog) #cite
library(gridtext)
library(popbio) #cite
library(knitr)
library(gridExtra)
library(RColorBrewer)
#library(rPref) #Double check what this is doing. Maybe cite?
library(tidyr)
library(dplyr)
library(ggpubr)
library(bookdown)
library(kableExtra)
library(grid)
library(Rage)
# #Raw data n supplemental. ASK
# in-stage bar graph goes in paper
# in stage management scenarios will definitely be supplemental
# Check out ecological modelling journal
# Write about stable stage cause I don't think you do
# Citations! Also check ahilya table
# APPENDIX!
# MAKE FIG CAPS FOR EVERYTHING AND EDIT FIGS.
observedData <- as.matrix(data.frame(read.csv("RaberinaryBenbow2012Calcs.csv")))
observedStageMatrix <- observedData[1:13, 2:5]
options(tinytex.verbose = TRUE)
survivability <- function(increase){
#Calculate survivability for each staege and increase by x%
NewMtx <- (A * increase) + A
for(i in 1:ncol(NewMtx)-1){
if(sum(NewMtx[,i]) > 1 | NewMtx[4,4] > 1){
return(NA)
}}
return(NewMtx)
}
#This is stupid but it just forces R to stop writing things as complex numbers
f <- function(x) {
if (all(Im(z <- zapsmall(x))==0)) as.numeric(z) else x
}
real_check <- function(mtx){
if(sum(mtx[,1]) > 1 | sum(mtx[,2]) > 1 | sum(mtx[,3]) > 1 | mtx[4,4] > 1){
return(NA)
}
else{return(mtx)}
}
#Make Z
z <- matrix(t(observedStageMatrix[2:11,]), ncol = 1, nrow = 40, byrow = TRUE)
#z
#Make M
m <- matrix(, nrow = nrow(z) , ncol = 8)
for(i in 1:(nrow(observedStageMatrix)-3)){
m[(4 * (i-1) + 1):(4 * i),] <- matrix(c(observedStageMatrix[i,1], 0, 0, 0, 0, 0, observedStageMatrix[i,4], 0,
0, observedStageMatrix[i,1], observedStageMatrix[i,2], 0, 0, 0, 0, 0,
0, 0, 0, observedStageMatrix[i,2], observedStageMatrix[i,3], 0, 0, 0,
0, 0, 0, 0, 0, observedStageMatrix[i,3], 0, observedStageMatrix[i,4]),
nrow = 4, byrow = TRUE)
#m
}
#Make C
c <- matrix(c(diag(8) * (-1),
1, 1, 0, 0, 0, 0, 0, 0,
0, 0, 1, 1, 0, 0, 0, 0,
0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1), nrow = 12, ncol = 8, byrow = TRUE)
#c
#Make b
b <- matrix(c(rep(0,8), rep(1,4)), nrow = 12, ncol = 1, byrow = TRUE)
#Make P
#p <- matrix(, nrow = 8, ncol = 1, byrow = TRUE) #vector(p1, g1, p2, g2, p3, g3, f4, p4)
#Make mtx G and vector x
g <- t(m) %*% m
f_t <- -(t(-z) %*% m)
qp <- solve.QP(Dmat = g, dvec = f_t, Amat = -t(c), bvec = -t(b))#, factorized = FALSE)
A <- matrix(c(qp$solution[1], 0, 0, qp$solution[7],
qp$solution[2], qp$solution[3], 0, 0,
0, qp$solution[4], qp$solution[5], 0,
0, 0, qp$solution[6], qp$solution[8]), byrow = TRUE, nrow = 4, ncol = 4)
#A
RaberinaryData <- read.csv("RaberinaryBenbow2012Calcs.csv")
#LifeHistory
knitr::kable(RaberinaryData, format = "latex", booktabs = TRUE, caption = "(ref:rabdata) \\label{RabData}") %>%
kable_styling(latex_options="scale_down")
# I think this is going to be more of an aquaculture conversation than anything else
#Dowble check survivability > 1 check. I don't think you did that correctly
#do stagemo
#have a survivability check in stagemo
stagemo <- function(stage){
stage_it <- data.frame(matrix(ncol=5,nrow=0, dimnames=list(NULL, c("Stage", "Frequency", "PercentChange", "mu", "lambda"))))
for(i in 1:12){
for(j in 1:100){#FIND OUT HOW TO CONDENSE THESE IF STATEMENTS
testMtx <- A
if(stage == 4){
testMtx[stage, stage] <- A[stage, stage] + A[stage, stage]*(j/100)
} #input stage 4
else if(stage == 5){
testMtx[1, stage-1] <- A[1, stage-1] + A[1, stage-1]*(j/100)
} #input stage 5
else{
testMtx[,stage] <- A[,stage] + A[,stage]*(j/100)
} #input other stages
if (!is.na(real_check(testMtx))){
mu <- ((i-1) * log(eigen(A)$values[1])) + log(eigen(testMtx)$values[1]) / i
lambda <- exp(mu)
#print(lambda)
stage_it[nrow(stage_it) + 1,] <- c(stage, i, j/100, f(mu), f(lambda))
}
}
}
return(stage_it)
}
doesthiswork <- list()
for(i in 1:5){
p1 <-ggplot(stagemo(i), aes((Frequency - 1), PercentChange, fill = lambda)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(iteration$lambda)),
midpoint = 1,
space = "Lab",
na.value = "grey50"
)  +
ylim(0,1) +
scale_x_continuous(expand=c(0,0), breaks = c(0, 2, 5, 8, 11)) +
scale_y_continuous(expand=c(0,0)) +
# scale_x_continuous(name = "Frequency of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
# scale_y_continuous(name = "Percent change in survival", expand=c(0,0)) +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) + #, plot.margin = margin(0.5,0.5,0.5,0.5, "cm")) +
labs(fill = "Eigenvalue")
doesthiswork[[i]] <- p1
}
t <- ggarrange(plotlist = doesthiswork, labels = c("Stage 1", "Stage 2", "Stage 3", "Stage 4","Larval"), label.y = 1.05, label.x = 0.1,  font.label = list(size = 7), common.legend = TRUE, ncol = 2, nrow = 3, legend = "right") + theme(plot.margin = margin(0.1,0.1,0.1,0.1, "cm"))
annotate_figure(t, left = textGrob("Percent change in survival", rot = 90, vjust = 1, gp = gpar(cex = 1)),
bottom = textGrob("Months between closures", gp = gpar(cex = 1)))
#do.call(ggarrange, c(doesthiswork[1:5], labels = c("Stage 1", "Stage 2", "Stage 3", "Stage 4","Larval")))
library(Rage)
matU <- mpm_split(A)$matU
matU[1,1] <- A[1,1]
matR <- mpm_split(A)$matF
matR[1,1] <- 0
#mpm_standardize is the opposite of mpm_split
lifetable <- data.frame(mpm_to_table(
matU,
matF = matR,
matC = NULL,
start = 1L,
xmax = 1000,
lx_crit = 0.01,
radix = 1
))
#colnames(lifetable) <- c("Age (months)", "Survivorship", "Proportion of orginal cohort dying", "Mortality hazard", "Probability of death", "Probability of survival", "Remaining life expectancy", "Per-capita reproduction rate", "Expected number of offspring")
knitr::kable(lifetable, format = "latex", booktabs = TRUE, col.names = c("Age (months)", "Survivorship", "Proportion of orginal cohort dying", "Mortality hazard", "Probability of death", "Probability of survival", "Remaining life expectancy", "Per-capita reproduction rate", "Expected number of offspring"), caption = "(ref:lifetable) \\label{LifeTable}") %>%
column_spec(2:3, width = "5cm")
knitr::kable(lifetable, format = "latex", booktabs = TRUE, col.names = c("Age (months)", "Survivorship", "Proportion of orginal cohort dying", "Mortality hazard", "Probability of death", "Probability of survival", "Remaining life expectancy", "Per-capita reproduction rate", "Expected number of offspring"), caption = "(ref:lifetable) \\label{LifeTable}") %>%
column_spec(1:9, width = "4cm")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
#knitr::write_bib look into
setwd("C:/Users/sophi/Documents/GitHub/UNH_Docs/Proposal/Mtx_Model")
library(tinytex)
library(matlib)
library(ggplot2)
library(quadprog) #cite
library(gridtext)
library(popbio) #cite
library(knitr)
library(gridExtra)
library(RColorBrewer)
#library(rPref) #Double check what this is doing. Maybe cite?
library(tidyr)
library(dplyr)
library(ggpubr)
library(bookdown)
library(kableExtra)
# #Raw data n supplemental. ASK
# in-stage bar graph goes in paper
# in stage management scenarios will definitely be supplemental
# Check out ecological modelling journal
# Write about stable stage cause I don't think you do
# Citations! Also check ahilya table
# APPENDIX!
# MAKE FIG CAPS FOR EVERYTHING AND EDIT FIGS.
observedData <- as.matrix(data.frame(read.csv("RaberinaryBenbow2012Calcs.csv")))
observedStageMatrix <- observedData[1:13, 2:5]
options(tinytex.verbose = TRUE)
survivability <- function(increase){
#Calculate survivability for each staege and increase by x%
NewMtx <- (A * increase) + A
for(i in 1:ncol(NewMtx)-1){
if(sum(NewMtx[,i]) > 1 | NewMtx[4,4] > 1){
return(NA)
}}
return(NewMtx)
}
#This is stupid but it just forces R to stop writing things as complex numbers
f <- function(x) {
if (all(Im(z <- zapsmall(x))==0)) as.numeric(z) else x
}
real_check <- function(mtx){
if(sum(mtx[,1]) > 1 | sum(mtx[,2]) > 1 | sum(mtx[,3]) > 1 | mtx[4,4] > 1){
return(NA)
}
else{return(mtx)}
}
#Make Z
z <- matrix(t(observedStageMatrix[2:11,]), ncol = 1, nrow = 40, byrow = TRUE)
#z
#Make M
m <- matrix(, nrow = nrow(z) , ncol = 8)
for(i in 1:(nrow(observedStageMatrix)-3)){
m[(4 * (i-1) + 1):(4 * i),] <- matrix(c(observedStageMatrix[i,1], 0, 0, 0, 0, 0, observedStageMatrix[i,4], 0,
0, observedStageMatrix[i,1], observedStageMatrix[i,2], 0, 0, 0, 0, 0,
0, 0, 0, observedStageMatrix[i,2], observedStageMatrix[i,3], 0, 0, 0,
0, 0, 0, 0, 0, observedStageMatrix[i,3], 0, observedStageMatrix[i,4]),
nrow = 4, byrow = TRUE)
#m
}
#Make C
c <- matrix(c(diag(8) * (-1),
1, 1, 0, 0, 0, 0, 0, 0,
0, 0, 1, 1, 0, 0, 0, 0,
0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1), nrow = 12, ncol = 8, byrow = TRUE)
#c
#Make b
b <- matrix(c(rep(0,8), rep(1,4)), nrow = 12, ncol = 1, byrow = TRUE)
#Make P
#p <- matrix(, nrow = 8, ncol = 1, byrow = TRUE) #vector(p1, g1, p2, g2, p3, g3, f4, p4)
#Make mtx G and vector x
g <- t(m) %*% m
f_t <- -(t(-z) %*% m)
qp <- solve.QP(Dmat = g, dvec = f_t, Amat = -t(c), bvec = -t(b))#, factorized = FALSE)
A <- matrix(c(qp$solution[1], 0, 0, qp$solution[7],
qp$solution[2], qp$solution[3], 0, 0,
0, qp$solution[4], qp$solution[5], 0,
0, 0, qp$solution[6], qp$solution[8]), byrow = TRUE, nrow = 4, ncol = 4)
#A
#Calculates new rates based on vectors of % chagne and frequencies of restrictions
percentage <-rates <- c(seq(0, 1, .01)) # c(0.01, 0.05, 0.1, 0.15)
freqs <- c(seq(1, 12)) #c(1, 2, 3, 4, 6, 12)
iteration <- data.frame(matrix(ncol=4,nrow=0, dimnames=list(NULL, c("Frequency", "PercentChange", "mu", "lambda"))))
for(i in 1:length(freqs)){
for(j in 1:length(percentage)){
if (!is.na(survivability(percentage[j]))){
mu <- ((freqs[i]-1) * log(eigen(A)$values[1]) + log(eigen(survivability(percentage[j]))$values[1]))/ freqs[i]
lambda <- exp(mu)
iteration[nrow(iteration) + 1,] <- c(freqs[i], percentage[j], f(mu), f(lambda))
}
# neweig <- (eigen(survivability(percentage[j]))$values[1] + (freqs[i]-1) * eigen(A)$values[1]) / freqs[i]
}
}
#kable(iteration)
# Sources: https://www.webpages.uidaho.edu/wlf448/stochgro.pdf
# https://esajournals.onlinelibrary.wiley.com/doi/10.2307/1943004
#Calculates new rates based on vectors of % chagne and frequencies of restrictions
p <- list()
modeled_data1 <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Frequency", "PercentChange", "NoClose"))))
percentage <-rates <- c(seq(0, .1, .01)) # c(0.01, 0.05, 0.1, 0.15)
freqs <- c(seq(1, 12)) #c(1, 2, 3, 4, 6, 12)
#par(mfrow = c(6,4))
for(i in 1:length(freqs)){
for(j in 1:length(percentage)){
pop <- observedStageMatrix[13,]
N <- list()
numClose <- 0
for (k in 1:120){
if(k %% freqs[i] == 0){
N[[1]] <- pop
N[[k+1]] <- survivability(percentage[j]) %*% N[[k]]
numClose <- numClose + 1
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Frequency = freqs[i], PercentChange = percentage[j]), NoClose = numClose)
modeled_data1 <- rbind(modeled_data1, new_data)
}}
modeled_data1
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
#knitr::write_bib look into
setwd("C:/Users/sophi/Documents/GitHub/UNH_Docs/Proposal/Mtx_Model")
library(tinytex)
library(matlib)
library(ggplot2)
library(quadprog) #cite
library(gridtext)
library(popbio) #cite
library(knitr)
library(gridExtra)
library(RColorBrewer)
#library(rPref) #Double check what this is doing. Maybe cite?
library(tidyr)
library(dplyr)
library(ggpubr)
library(bookdown)
library(kableExtra)
library(Rage)
# #Raw data n supplemental. ASK
# in-stage bar graph goes in paper
# in stage management scenarios will definitely be supplemental
# Check out ecological modelling journal
# Write about stable stage cause I don't think you do
# Citations! Also check ahilya table
# APPENDIX!
# MAKE FIG CAPS FOR EVERYTHING AND EDIT FIGS.
observedData <- as.matrix(data.frame(read.csv("RaberinaryBenbow2012Calcs.csv")))
observedStageMatrix <- observedData[1:13, 2:5]
options(tinytex.verbose = TRUE)
survivability <- function(increase){
#Calculate survivability for each staege and increase by x%
NewMtx <- (A * increase) + A
for(i in 1:ncol(NewMtx)-1){
if(sum(NewMtx[,i]) > 1 | NewMtx[4,4] > 1){
return(NA)
}}
return(NewMtx)
}
#This is stupid but it just forces R to stop writing things as complex numbers
f <- function(x) {
if (all(Im(z <- zapsmall(x))==0)) as.numeric(z) else x
}
real_check <- function(mtx){
if(sum(mtx[,1]) > 1 | sum(mtx[,2]) > 1 | sum(mtx[,3]) > 1 | mtx[4,4] > 1){
return(NA)
}
else{return(mtx)}
}
write_matex <- function(x) {
begin <- "$$\\begin{bmatrix}"
end <- "\\end{bmatrix}$$"
X <-
apply(x, 1, function(x) {
paste(
paste(x, collapse = "&"),
"\\\\"
)
})
writeLines(c(begin, X, end))
}
knitr::include_graphics("LifeGraph.png")
knitr::include_graphics("MtxGeneric.png")
#Make Z
z <- matrix(t(observedStageMatrix[2:11,]), ncol = 1, nrow = 40, byrow = TRUE)
#z
#Make M
m <- matrix(, nrow = nrow(z) , ncol = 8)
for(i in 1:(nrow(observedStageMatrix)-3)){
m[(4 * (i-1) + 1):(4 * i),] <- matrix(c(observedStageMatrix[i,1], 0, 0, 0, 0, 0, observedStageMatrix[i,4], 0,
0, observedStageMatrix[i,1], observedStageMatrix[i,2], 0, 0, 0, 0, 0,
0, 0, 0, observedStageMatrix[i,2], observedStageMatrix[i,3], 0, 0, 0,
0, 0, 0, 0, 0, observedStageMatrix[i,3], 0, observedStageMatrix[i,4]),
nrow = 4, byrow = TRUE)
#m
}
#Make C
c <- matrix(c(diag(8) * (-1),
1, 1, 0, 0, 0, 0, 0, 0,
0, 0, 1, 1, 0, 0, 0, 0,
0, 0, 0, 0, 1, 1, 0, 0,
0, 0, 0, 0, 0, 0, 0, 1), nrow = 12, ncol = 8, byrow = TRUE)
#c
#Make b
b <- matrix(c(rep(0,8), rep(1,4)), nrow = 12, ncol = 1, byrow = TRUE)
#Make P
#p <- matrix(, nrow = 8, ncol = 1, byrow = TRUE) #vector(p1, g1, p2, g2, p3, g3, f4, p4)
#Make mtx G and vector x
g <- t(m) %*% m
f_t <- -(t(-z) %*% m)
qp <- solve.QP(Dmat = g, dvec = f_t, Amat = -t(c), bvec = -t(b))#, factorized = FALSE)
A <- matrix(c(qp$solution[1], 0, 0, qp$solution[7],
qp$solution[2], qp$solution[3], 0, 0,
0, qp$solution[4], qp$solution[5], 0,
0, 0, qp$solution[6], qp$solution[8]), byrow = TRUE, nrow = 4, ncol = 4)
#A
A_round <- matrix( , byrow = TRUE, nrow = 4, ncol = 4)
for (i in 1:length(A)){
A_round[i] <- round(A[i], 3)
}
# A_round <- matrix(-1*c(qp_round[1], 0, 0, qp_round[7],
#               qp_round[2], qp_round[3], 0, 0,
#               0, qp_round[4], qp_round[5], 0,
#               0, 0, qp_round[6], qp_round[8]), byrow = TRUE, nrow = 4, ncol = 4)
round_A <- matrix(A_round, 4, 4)
round_A[1] <- paste0("P1 = ", round_A[1])
round_A[13] <- paste0("F4 = ", round_A[13])
round_A[2] <- paste0("G1 = ", round_A[2])
round_A[6] <- paste0("P2 = ", round_A[6])
round_A[7] <- paste0("G2 = ", round_A[7])
round_A[11] <- paste0("P3 = ", round_A[11])
round_A[12] <- paste0("G3 = ", round_A[12])
round_A[16] <- paste0("P4 = ", round_A[16])
knitr::include_graphics("MtxFilled.png")
#write_matex(round_A)
LifeHistory <- read.csv("OcyaneaLifeHistory.csv")
LifeHistory
LifeHistory[1:2]
ages <- data.frame(matrix(data = NA, nrow = 4, ncol = 3))
colnames(ages) <- c("Stage", "Duration_New", "Variance")
for(i in 1:nrow(A)){
ages$Stage[i] <- i
ages$Duration_New[i] <- 1/(1-A[i,i])
ages$Variance[i] <- A[i,i]/(1-A[i,i])^2
}
ages
LifeHistory
ages <- rbind(ages[rep(NA, 2),], ages)
ages
ages <- rbind(ages[rep(NA, 2),], ages)
ages
ages <- data.frame(matrix(data = NA, nrow = 4, ncol = 3))
colnames(ages) <- c("Stage", "Duration_New", "Variance")
for(i in 1:nrow(A)){
ages$Stage[i] <- i
ages$Duration_New[i] <- 1/(1-A[i,i])
ages$Variance[i] <- A[i,i]/(1-A[i,i])^2
}
ages <- rbind(ages[rep(NA, 2),], ages)
ages
ages <- data.frame(matrix(data = NA, nrow = 4, ncol = 3))
colnames(ages) <- c("Stage", "Duration_New", "Variance")
for(i in 1:nrow(A)){
ages$Stage[i] <- i
ages$Duration_New[i] <- 1/(1-A[i,i])
ages$Variance[i] <- A[i,i]/(1-A[i,i])^2
}
ages[rep(NA, 2),]
print(ages[rep(NA, 2),])
ages <- data.frame(matrix(data = NA, nrow = 4, ncol = 3))
colnames(ages) <- c("Stage", "Duration_New", "Variance")
for(i in 1:nrow(A)){
ages$Stage[i] <- i
ages$Duration_New[i] <- 1/(1-A[i,i])
ages$Variance[i] <- A[i,i]/(1-A[i,i])^2
}
LifeHistory <- Life[,1:2]
Life <- read.csv("OcyaneaLifeHistory.csv")
LifeHistory <- Life[,1:2]
LifeHistory
ages
LifeHistory$New <- c(NA, NA, ages[,2] )
ages[,2]
LifeHistory$New <- c(NA, NA, ages[,2], NA, NA )
LifeHistory
LifeHistory$Var <- c(NA, NA, ages[,3], NA, NA )
LifeHistory
colnames(LifeHistory) <- c("Stage", "Existing Estimate", "Estimate from Lefkovitch Matrix", "Variance")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dev="cairo_pdf")
#knitr::write_bib look into
setwd("C:/Users/sophi/Documents/GitHub/UNH_Docs/Proposal/Soc_Ecol_Model")
ages <- data.frame(matrix(data = NA, nrow = 4, ncol = 3))
colnames(ages) <- c("Stage", "Duration_New", "Variance")
for(i in 1:4){
ages$Stage[i] <- i
ages$Duration_New[i] <- i
ages$Variance[i] <- i
}
ages
