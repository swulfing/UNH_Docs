filter(Status1 == "SomeFish" | Status2 == "SomeFish")
View(whereFish)
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphDataX <- modeled_data %>%
mutate(Status1 = case_when(
X1_Final <= 0.1 ~ "AllFishing",
X1_Final > 0.1 & X1_Final < 0.99 ~ "SomeFishing",
X1_Final == 0.99 ~ "NoneFishing"
)) %>%
mutate(Status2 = case_when(
X2_Final <= 0.1 ~ "AllFishing",
X2_Final > 0.1 & X2_Final < 0.99 ~ "NoneFishing", #All of these eventually go to NoneFishing
X2_Final == 0.99 ~ "NoneFishing"
))
whyNA <- modeled_GraphDataX %>%
filter(is.na(Status2))
View(whyNA)
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphDataX <- modeled_data %>%
mutate(Status1 = case_when(
X1_Final <= 0.1 ~ "AllFishing",
X1_Final > 0.1 & X1_Final < 0.99 ~ "SomeFishing",
X1_Final > 0.99 ~ "NoneFishing"
)) %>%
mutate(Status2 = case_when(
X2_Final <= 0.1 ~ "AllFishing",
X2_Final > 0.1 & X2_Final < 0.99 ~ "NoneFishing", #All of these eventually go to NoneFishing
X2_Final > 0.99 ~ "NoneFishing"
))
whyNA <- modeled_GraphDataX %>%
filter(is.na(Status2))
whyNA
View(whyNA)
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphDataX <- modeled_data %>%
mutate(Status1 = case_when(
X1_Final <= 0.1 ~ "AllFishing",
X1_Final > 0.1 & X1_Final < 0.99 ~ "SomeFishing",
X1_Final > 0.99 ~ "NoneFishing"
)) %>%
mutate(Status2 = case_when(
X2_Final <= 0.1 ~ "AllFishing",
X2_Final > 0.1 & X2_Final < 0.99 ~ "SomeFishing", #All of these eventually go to NoneFishing
X2_Final > 0.99 ~ "NoneFishing"
))
whyNA <- modeled_GraphDataX %>%
filter(is.na(Status2))
View(whyNA)
whereFishing <- modeled_GraphDataX %>%
filter(Status1 == "SomeFishing" | Status2 == "SomeFishing")
View(whereFishing)
params_list <- data.frame(r_1 = 0.40, s_1 = 0.8, h_1 = 0.25, k_1 = 1.014, w_1 = 0.2, c_1 = 1.5, d_1 = 0.5, m_1 = 0.2, rho_1 = 0.5,
r_2 = 0.35, s_2 = 0.8, h_2 = 0.5, k_2 = 1.014, w_2 = 0.35, c_2 = 1.5, d_2 = 0.5, m_2 = 0.2, rho_2 = 0.1)
timespan <- seq(from = 0, to = 1000, by = 1)
plotList <- list()
for(i in 1:length(whereFishing)){
params_Default <- params_list
params_Default[9] <- whereFishing$Rho_1[i]
params_Default[18] <- whereFishing$Rho_2[i]
times <- timespan
yStart <- c(F_1 = 0.406, F_2 = 0.406, X_1 = .24, X_2 = .24)
ode(
func=Bauch.Coupled,
y=yStart,
times=times,
parms=params_Default
) %>%
as.data.frame() -> out_Diff
if(i ==1){
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
scale_discrete_manual(values=cbbPalette, aesthetics = "colour", name = "Variable", labels=c(expression('F'[1]), expression('F'[2]), expression('X'[1]), expression('X'[2]))) +
ggtitle(paste("\u03C1", " 1 = ", params_Default[9], "\u03C1", " 2 = ", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}else{
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
#theme(legend.position = "none") +
ggtitle(paste("\u03C1", "1=", params_Default[9], "\u03C1", "2=", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}
}
yleft = richtext_grob("Population", rot=90)
bottom = richtext_grob(
text = paste('Time (year)',  " F=", yStart[1], "X=", yStart[3])
)
p_legend <- get_legend(plotList[[1]])
grid.arrange(arrangeGrob(plotList[[1]] + theme(legend.position="none"),
plotList[[2]] + theme(legend.position="none"),
plotList[[3]] + theme(legend.position="none"),
plotList[[4]] + theme(legend.position="none"),
plotList[[5]] + theme(legend.position="none"),
plotList[[6]] + theme(legend.position="none"),
plotList[[7]] + theme(legend.position="none"),
plotList[[8]] + theme(legend.position="none"),
plotList[[9]] + theme(legend.position="none"),
nrow=3, left = yleft, bottom = bottom),
p_legend,
ncol=2,widths=c(2, 0.3))
modeled_GraphDataX <- modeled_data %>%
mutate(Status1 = case_when(
X1_Final <= 0.1 ~ "AllFishing",
X1_Final > 0.1 & X1_Final < 0.99 ~ "NoneFishing",
X1_Final > 0.99 ~ "NoneFishing"
)) %>%
mutate(Status2 = case_when(
X2_Final <= 0.1 ~ "AllFishing",
X2_Final > 0.1 & X2_Final < 0.99 ~ "NoneFishing", #All of these eventually go to NoneFishing
X2_Final > 0.99 ~ "NoneFishing"
))
params_list <- data.frame(r_1 = 0.40, s_1 = 0.8, h_1 = 0.25, k_1 = 1.014, w_1 = 0.2, c_1 = 1.5, d_1 = 0.5, m_1 = 0.2, rho_1 = 0.5,
r_2 = 0.35, s_2 = 0.8, h_2 = 0.5, k_2 = 1.014, w_2 = 0.35, c_2 = 1.5, d_2 = 0.5, m_2 = 0.2, rho_2 = 0.1)
timespan <- seq(from = 0, to = 1000, by = 1)
plotList <- list()
for(i in 1:length(whereFish[1:9])){
params_Default <- params_list
params_Default[9] <- whereFishing$Rho_1[i]
params_Default[18] <- whereFishing$Rho_2[i]
times <- timespan
yStart <- c(F_1 = 0.406, F_2 = 0.406, X_1 = .24, X_2 = .24)
ode(
func=Bauch.Coupled,
y=yStart,
times=times,
parms=params_Default
) %>%
as.data.frame() -> out_Diff
if(i ==1){
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
scale_discrete_manual(values=cbbPalette, aesthetics = "colour", name = "Variable", labels=c(expression('F'[1]), expression('F'[2]), expression('X'[1]), expression('X'[2]))) +
ggtitle(paste("\u03C1", " 1 = ", params_Default[9], "\u03C1", " 2 = ", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}else{
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
#theme(legend.position = "none") +
ggtitle(paste("\u03C1", "1=", params_Default[9], "\u03C1", "2=", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}
}
yleft = richtext_grob("Population", rot=90)
bottom = richtext_grob(
text = paste('Time (year)',  " F=", yStart[1], "X=", yStart[3])
)
p_legend <- get_legend(plotList[[1]])
grid.arrange(arrangeGrob(plotList[[1]] + theme(legend.position="none"),
plotList[[2]] + theme(legend.position="none"),
plotList[[3]] + theme(legend.position="none"),
plotList[[4]] + theme(legend.position="none"),
plotList[[5]] + theme(legend.position="none"),
plotList[[6]] + theme(legend.position="none"),
plotList[[7]] + theme(legend.position="none"),
plotList[[8]] + theme(legend.position="none"),
plotList[[9]] + theme(legend.position="none"),
nrow=3, left = yleft, bottom = bottom),
p_legend,
ncol=2,widths=c(2, 0.3))
params_list <- data.frame(r_1 = 0.40, s_1 = 0.8, h_1 = 0.25, k_1 = 1.014, w_1 = 0.2, c_1 = 1.5, d_1 = 0.5, m_1 = 0.2, rho_1 = 0.5,
r_2 = 0.35, s_2 = 0.8, h_2 = 0.5, k_2 = 1.014, w_2 = 0.35, c_2 = 1.5, d_2 = 0.5, m_2 = 0.2, rho_2 = 0.1)
timespan <- seq(from = 0, to = 1000, by = 1)
plotList <- list()
for(i in 1:length(whereFish[1:9])){
params_Default <- params_list
params_Default[9] <- whereFish$Rho_1[i]
params_Default[18] <- whereFish$Rho_2[i]
times <- timespan
yStart <- c(F_1 = 0.406, F_2 = 0.406, X_1 = .24, X_2 = .24)
ode(
func=Bauch.Coupled,
y=yStart,
times=times,
parms=params_Default
) %>%
as.data.frame() -> out_Diff
if(i ==1){
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
scale_discrete_manual(values=cbbPalette, aesthetics = "colour", name = "Variable", labels=c(expression('F'[1]), expression('F'[2]), expression('X'[1]), expression('X'[2]))) +
ggtitle(paste("\u03C1", " 1 = ", params_Default[9], "\u03C1", " 2 = ", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}else{
p <- out_Diff %>%
gather(variable,value,-time) %>%
ggplot(aes(x=time,y=value,color=variable))+
geom_line(size=1)+
theme_classic()+
scale_colour_manual(values=cbbPalette) +
scale_x_discrete(name = "", limits = c(0, 500, 950)) +
scale_y_discrete(name = "", limits = c(0, 0.5, 0.95)) +
# scale_x_discrete(name = "Time (Year)", limits = c(0,750)) +
# scale_y_discrete(name = "Population", limits = c(0, 0.5, 1)) +
#theme(legend.position = "none") +
ggtitle(paste("\u03C1", "1=", params_Default[9], "\u03C1", "2=", params_Default[18])) +
theme(plot.title = element_text(size=7))
plotList[[i]] <- p
}
}
yleft = richtext_grob("Population", rot=90)
bottom = richtext_grob(
text = paste('Time (year)',  " F=", yStart[1], "X=", yStart[3])
)
p_legend <- get_legend(plotList[[1]])
grid.arrange(arrangeGrob(plotList[[1]] + theme(legend.position="none"),
plotList[[2]] + theme(legend.position="none"),
plotList[[3]] + theme(legend.position="none"),
plotList[[4]] + theme(legend.position="none"),
plotList[[5]] + theme(legend.position="none"),
plotList[[6]] + theme(legend.position="none"),
plotList[[7]] + theme(legend.position="none"),
plotList[[8]] + theme(legend.position="none"),
plotList[[9]] + theme(legend.position="none"),
nrow=3, left = yleft, bottom = bottom),
p_legend,
ncol=2,widths=c(2, 0.3))
#FOR SOME REASON THESE GRAPHS ARE NOT PROPERLY FILTERING
#modeled_data <- read.csv("rhoModel.csv")
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphDataF <- modeled_data %>%
mutate(Status1 = case_when(
F1_Final <= 0.1 ~ "StockCrash",
F1_Final > 0.1 & F1_Final < 0.99 ~ "SomeFish",
F1_Final > 0.99 ~ "AllFish"
)) %>%
mutate(Status2 = case_when(
F2_Final <= 0.1 ~ "StockCrash",
F2_Final > 0.1 & F2_Final < 0.99 ~ "SomeFish",
F2_Final > 0.99 ~ "AllFish"
))
whereFish <- modeled_GraphDataF %>%
filter(Status1 == "SomeFish" | Status2 == "SomeFish")
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
# scale_fill_gradient2(
# low = "red",
# mid = "green",
# high = "purple",
# #limits = c(1, max(growthRate$lambda_new)),
# midpoint = 0.1,
# space = "Lab",
# na.value = "grey50") +
scale_x_continuous(name = "Rho 2", expand=c(0,0)) + #, breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
# labs(fill = "Final Population") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
# geom_step(data = paretospagheto , aes(x=Frequency, y=PercentChange), size = .5, color = "#5A5A5A") +
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status2)) + geom_tile(width=.05) +
# scale_fill_gradient2(
# low = "red",
# mid = "green",
# high = "purple",
# #limits = c(1, max(growthRate$lambda_new)),
# midpoint = 0.1,
# space = "Lab",
# na.value = "grey50") +
scale_x_continuous(name = "Rho 2", expand=c(0,0)) + #, breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
# labs(fill = "Final Population") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
# geom_step(data = paretospagheto , aes(x=Frequency, y=PercentChange), size = .5, color = "#5A5A5A") +
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
#modeled_data <- read.csv("rhoModel.csv")
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphDataX <- modeled_data %>%
mutate(Status1 = case_when(
X1_Final <= 0.1 ~ "AllFishing",
X1_Final > 0.1 & X1_Final < 0.99 ~ "NoneFishing",
X1_Final > 0.99 ~ "NoneFishing"
)) %>%
mutate(Status2 = case_when(
X2_Final <= 0.1 ~ "AllFishing",
X2_Final > 0.1 & X2_Final < 0.99 ~ "NoneFishing", #All of these eventually go to NoneFishing, changed to NoneFishing
X2_Final > 0.99 ~ "NoneFishing"
))
ggplot(modeled_GraphDataX, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
# scale_fill_gradient2(
# low = "red",
# mid = "green",
# high = "purple",
# #limits = c(1, max(growthRate$lambda_new)),
# midpoint = 0.1,
# space = "Lab",
# na.value = "grey50") +
scale_x_continuous(name = "Rho 2", expand=c(0,0)) + #, breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
# labs(fill = "Final Population") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
# geom_step(data = paretospagheto , aes(x=Frequency, y=PercentChange), size = .5, color = "#5A5A5A") +
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
ggplot(modeled_GraphDataX, aes(x = Rho_2, y = Rho_1, fill = Status2)) + geom_tile(width=.05) +
# scale_fill_gradient2(
# low = "red",
# mid = "green",
# high = "purple",
# #limits = c(1, max(growthRate$lambda_new)),
# midpoint = 0.1,
# space = "Lab",
# na.value = "grey50") +
scale_x_continuous(name = "Rho 2", expand=c(0,0)) + #, breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
# labs(fill = "Final Population") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
# geom_step(data = paretospagheto , aes(x=Frequency, y=PercentChange), size = .5, color = "#5A5A5A") +
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
modeled_data <- read.csv("rhoModel.csv")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ "StockCrash",
F2_Final > 0.1 & F2_Final < 0.99 ~ "SomeFishX2Fish",
F2_Final > 0.99 ~ "AllFish"
))
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = "Rho 2", expand=c(0,0)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('Rho'[2]), expand=c(0,0)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = "Rho 1", expand=c(0,0))
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0))
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
theme()
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
theme(legend. position = “none”)
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
theme(legend.position = “none”)
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
theme(legend.position = "none")
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none")
ggplot(modeled_GraphDataF, aes(x = Rho_2, y = Rho_1, fill = Status1)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "RdYlBl") +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = Status)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "RdYlBl") +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = Status)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "none")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ .5, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 1 # Fish full pop, no fishing
))
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = Status)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "Paired") +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_brewer(palette = "RdBu") +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_discrete(palette = cbbPalette) +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_manual(values=cbbPalette) +
theme(legend.position = "none")
cbbPalette <- c("#670a1f", "#4393c3", "#053061")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ .5, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 1 # Fish full pop, no fishing
))
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_manual(values=cbbPalette) +
theme(legend.position = "none")
cbbPalette <- c("#670a1f", "#4393c3", "#053061")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ .5, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 1 # Fish full pop, no fishing
))
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_manual(values=cbbPalette) +
theme(legend.position = "none")
fishPalette <- c("#670a1f", "#4393c3", "#053061")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ .5, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 1 # Fish full pop, no fishing
))
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_manual(values=fishPalette) +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = as.factor(Status))) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_discrete(values=fishPalette) +
theme(legend.position = "none")
modeled_data <- read.csv("rhoModel.csv")
fishPalette <- c("#670a1f", "#4393c3", "#053061")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ .5, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 1 # Fish full pop, no fishing
))
modeled_GraphData$Status <- as.factor(modeled_data$Status)
modeled_data <- read.csv("rhoModel.csv")
fishPalette <- c("#670a1f", "#4393c3", "#053061")
modeled_GraphData <- modeled_data %>%
mutate(Status = case_when(
F2_Final <= 0.1 ~ 0, # Stock Crash, All
F2_Final > 0.1 & F2_Final < 0.99 ~ 1, # Some Fish Both Patches, Only X2 Fish
F2_Final > 0.99 ~ 2 # Fish full pop, no fishing
))
modeled_GraphData$Status <- as.factor(modeled_GraphData$Status)
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = Status)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_colour_manual(values=fishPalette) +
theme(legend.position = "none")
ggplot(modeled_GraphData, aes(x = Rho_2, y = Rho_1, fill = Status)) + geom_tile(width=.05) +
scale_x_continuous(name = expression('\u03C1'[2]), expand=c(0,0)) +
scale_y_continuous(name = expression('\u03C1'[1]), expand=c(0,0)) +
scale_fill_manual(values=fishPalette) +
theme(legend.position = "none")
