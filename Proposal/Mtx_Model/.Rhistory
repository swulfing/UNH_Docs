new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
modeled_data
View(modeled_data)
A[4,4] + A[4,4] * freqs[j]
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
modeled_data
j <- 10
freqs
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
pickstage(1)
stage <- 1
i <- 2
j <- 2
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,1,0.1)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
modeled_data
View(modeled_data)
pickstage(1)
stage <- 1
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,1,0.1)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
View(modeled_data)
pickstage <- function(stage){
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,1,0.1)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
}
pickstage(1)
pickstage(1)
View(modeled_data)
pickstage <- function(stage){
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,1,0.1)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
#### CALCULATE GROWTH RATE BASED ON LAST POP-FIRST POP/FIRST POP FOR EACH FREQ/PERCENT COMBINATION
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4) %>%
mutate(Mu_New = log(month_120/month_0)/120) %>% #See Crouse paper. From Nt = N0e^(rt)
mutate(lambda_new = exp(Mu_New)) %>%
select(Closure, PercentChange, Mu_New, lambda_new)
#### COPY PARETTO GRAPH FROM OTHER ANALYSIS
paretospagheto <- growthRate %>%
filter(lambda_new >= 1) %>%
group_by(Closure) %>%
filter(lambda_new == min(lambda_new))
paretospagheto$Closure <- paretospagheto$Closure - 0.5
paretospagheto$PercentChange <- paretospagheto$PercentChange - 0.005
mult_format <- function() {
function(x) format(100*x,digits = 2)
}
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50") +
scale_x_continuous(name = "Length of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Percent change in survival", expand=c(0,0), labels = mult_format()) +
labs(fill = "Eigenvalue") +
geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
geom_step(data = paretospagheto , aes(x=Closure, y=PercentChange), size = .5, color = "#5A5A5A") +
geom_text(x=8, y=.07, label="Population Increasing") +
geom_text(x=3.5, y=.015, label="Population Decreasing")
}
pickstage(1)
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4)
View(growthRate)
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50") +
scale_x_continuous(name = "Length of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Percent change in survival", expand=c(0,0), labels = mult_format()) +
ggtitle(paste0(stage)) +
labs(fill = "Eigenvalue")
pickstage(1)
#### CALCULATE GROWTH RATE BASED ON LAST POP-FIRST POP/FIRST POP FOR EACH FREQ/PERCENT COMBINATION
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4) %>%
mutate(Mu_New = log(month_120/month_0)/120) %>% #See Crouse paper. From Nt = N0e^(rt)
mutate(lambda_new = exp(Mu_New)) %>%
select(Closure, PercentChange, Mu_New, lambda_new)
View(growthRate)
stage <- 1
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,1,0.1)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
#### CALCULATE GROWTH RATE BASED ON LAST POP-FIRST POP/FIRST POP FOR EACH FREQ/PERCENT COMBINATION
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4) %>%
mutate(Mu_New = log(month_120/month_0)/120) %>% #See Crouse paper. From Nt = N0e^(rt)
mutate(lambda_new = exp(Mu_New)) %>%
select(Closure, PercentChange, Mu_New, lambda_new)
View(growthRate)
#### COPY PARETTO GRAPH FROM OTHER ANALYSIS
paretospagheto <- growthRate %>%
filter(lambda_new >= 1) %>%
group_by(Closure) %>%
filter(lambda_new == min(lambda_new))
mult_format <- function() {
function(x) format(100*x,digits = 2)
}
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50")
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50") +
scale_x_continuous(name = "Length of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Percent change in survival", expand=c(0,0), labels = mult_format()) +
ggtitle(paste0(stage)) +
labs(fill = "Eigenvalue") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
geom_step(data = paretospagheto , aes(x=Closure, y=PercentChange), size = .5, color = "#5A5A5A")
pickstage <- function(stage){
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,.1,0.01)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
#### CALCULATE GROWTH RATE BASED ON LAST POP-FIRST POP/FIRST POP FOR EACH FREQ/PERCENT COMBINATION
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4) %>%
mutate(Mu_New = log(month_120/month_0)/120) %>% #See Crouse paper. From Nt = N0e^(rt)
mutate(lambda_new = exp(Mu_New)) %>%
select(Closure, PercentChange, Mu_New, lambda_new)
#### COPY PARETTO GRAPH FROM OTHER ANALYSIS
paretospagheto <- growthRate %>%
filter(lambda_new >= 1) %>%
group_by(Closure) %>%
filter(lambda_new == min(lambda_new))
# paretospagheto$Closure <- paretospagheto$Closure - 0.5
# paretospagheto$PercentChange <- paretospagheto$PercentChange - 0.005
mult_format <- function() {
function(x) format(100*x,digits = 2)
}
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50") +
scale_x_continuous(name = "Length of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Percent change in survival", expand=c(0,0), labels = mult_format()) +
ggtitle(paste0(stage)) +
labs(fill = "Eigenvalue") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
geom_step(data = paretospagheto , aes(x=Closure, y=PercentChange), size = .5, color = "#5A5A5A")
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
}
pickstage(1)
pickstage <- function(stage){
modeled_data <- data.frame(matrix(ncol=9,nrow=0, dimnames=list(NULL, c("Stage_1", "Stage_2", "Stage_3", "Stage_4", "month", "pop", "Closure", "PercentChange", "Stage"))))
months <- seq(1,12,1)
freqs <- seq(0,.1,0.01)
for (i in 1:length(months)){
for(j in 1:length(freqs)){
#Creating the closure matrices for stage 4, then all the other stages (else statement)
if(stage == 4){
if((A[4,4] + A[4,4] * freqs[j]) <= 1){
newMtx <- A
newMtx[4,4] <- A[4,4] + A[4,4] * freqs[j]
}}else{
if((sum(A[,stage] + A[,stage] * freqs[j])) <= 1){
newMtx <- A
newMtx[,stage] <- A[,stage] + A[,stage] * freqs[j]
}}
#now make projections
pop <- observedStageMatrix[13,]
N <- list()
for (k in 1:120){
if(k %% 12 %in% c(seq(1, months[i]))){
N[[1]] <- pop
N[[k+1]] <- newMtx %*% N[[k]]
}
else{
N[[1]] <- pop
N[[k+1]] <- A %*% N[[k]]
}}
new_data <- t(as.data.frame(do.call(cbind, N)))
colnames(new_data) <- c("Stage_1", "Stage_2", "Stage_3", "Stage_4")
new_data <- data.frame(cbind(new_data, month = 0:120, pop = rowSums(new_data[,1:4]), Closure = months[i], PercentChange = freqs[j], Stage = stage))
modeled_data <- rbind(modeled_data, new_data)
}
}
#### CALCULATE GROWTH RATE BASED ON LAST POP-FIRST POP/FIRST POP FOR EACH FREQ/PERCENT COMBINATION
growthRate <- modeled_data %>%
select(month, pop, Closure, PercentChange) %>%
filter(month == 0 | month == 120) %>%
pivot_wider(names_from = month, values_from = pop) %>%
rename(month_0 = 3,
month_120 = 4) %>%
mutate(Mu_New = log(month_120/month_0)/120) %>% #See Crouse paper. From Nt = N0e^(rt)
mutate(lambda_new = exp(Mu_New)) %>%
select(Closure, PercentChange, Mu_New, lambda_new)
#### COPY PARETTO GRAPH FROM OTHER ANALYSIS
paretospagheto <- growthRate %>%
filter(lambda_new >= 1) %>%
group_by(Closure) %>%
filter(lambda_new == min(lambda_new))
paretospagheto$Closure <- paretospagheto$Closure - 0.5
paretospagheto$PercentChange <- paretospagheto$PercentChange - 0.005
mult_format <- function() {
function(x) format(100*x,digits = 2)
}
#Continuous Colors
ggplot(growthRate, aes(Closure, PercentChange, fill = lambda_new)) + geom_tile(width=1) +
scale_fill_gradient2(
low = "red",
mid = "white",
high = "green",
#limits = c(1, max(growthRate$lambda_new)),
midpoint = 1,
space = "Lab",
na.value = "grey50") +
scale_x_continuous(name = "Length of closure (months)", expand=c(0,0), breaks = c(1, 3, 6, 9, 12)) +
scale_y_continuous(name = "Percent change in survival", expand=c(0,0), labels = mult_format()) +
ggtitle(paste0(stage)) +
labs(fill = "Eigenvalue") +
# geom_segment(aes(x = 2.5, y = .075, xend = 2.5, yend = 0.105), size = .5, color = "#5A5A5A") +
# geom_segment(aes(x = 11.5, y = .015, xend = 12.5, yend = 0.015), size = .5, color = "#5A5A5A") +
geom_step(data = paretospagheto , aes(x=Closure, y=PercentChange), size = .5, color = "#5A5A5A")
# geom_text(x=8, y=.07, label="Population Increasing") +
# geom_text(x=3.5, y=.015, label="Population Decreasing")
}
pickstage(1)
nrow(A)
pl <- list()
for(i in 1:nrow(A)){
pl[[i]] <- pickstage(i)
}
ggarrange(plotlist = pl, ncol = 2, nrow = 2, legend = "right", common.legend = TRUE)
